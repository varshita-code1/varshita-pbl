import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

class BankAccount {
    private String accountHolder;
    private double balance;

    public BankAccount(String accountHolder) {
        this.accountHolder = accountHolder;
        this.balance = 0.0;
    }

    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            JOptionPane.showMessageDialog(null, "Deposited: " + amount);
        } else {
            JOptionPane.showMessageDialog(null, "Invalid deposit amount.");
        }
    }

    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            JOptionPane.showMessageDialog(null, "Withdrew: " + amount);
        } else {
            JOptionPane.showMessageDialog(null, "Invalid withdrawal amount.");
        }
    }

    public double getBalance() {
        return balance;
    }

    public String getAccountHolder() {
        return accountHolder;
    }
}

public class BankingApp extends JFrame {
    private BankAccount account;

    private JTextField accountHolderField;
    private JTextField depositField;
    private JTextField withdrawField;
    private JTextArea balanceArea;

    public BankingApp() {
        setTitle("Banking Management System");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new FlowLayout());

        accountHolderField = new JTextField(15);
        depositField = new JTextField(10);
        withdrawField = new JTextField(10);
        balanceArea = new JTextArea(5, 20);
        balanceArea.setEditable(false);

        JButton createAccountButton = new JButton("Create Account");
        JButton depositButton = new JButton("Deposit");
        JButton withdrawButton = new JButton("Withdraw");
        JButton checkBalanceButton = new JButton("Check Balance");

        createAccountButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String accountHolder = accountHolderField.getText();
                if (!accountHolder.isEmpty()) {
                    account = new BankAccount(accountHolder);
                    JOptionPane.showMessageDialog(null, "Account created for: " + accountHolder);
                } else {
                    JOptionPane.showMessageDialog(null, "Please enter an account holder name.");
                }
            }
        });

        depositButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (account != null) {
                    double amount = Double.parseDouble(depositField.getText());
                    account.deposit(amount);
                } else {
                    JOptionPane.showMessageDialog(null, "Please create an account first.");
                }
            }
        });

        withdrawButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (account != null) {
                    double amount = Double.parseDouble(withdrawField.getText());
                    account.withdraw(amount);
                } else {
                    JOptionPane.showMessageDialog(null, "Please create an account first.");
                }
            }
        });

        checkBalanceButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (account != null) {
                    balanceArea.setText("Balance: " + account.getBalance());
                } else {
                    JOptionPane.showMessageDialog(null, "Please create an account first.");
                }
            }
        });

        add(new JLabel("Account Holder:"));
        add(accountHolderField);
        add(createAccountButton);
        add(new JLabel("Deposit Amount:"));
        add(depositField);
        add(depositButton);
        add(new JLabel("Withdraw Amount:"));
        add(withdrawField);
        add(withdrawButton);
        add(checkBalanceButton);
        add(new JScrollPane(balanceArea));

        setVisible(true);
    }

    public static void main(String[] args) {
        new BankingApp();
    }
}
